Запуск:
1 - пишешь `make`
2 - затем у тебя выбор: 
    1) `make execute FILE=input.bin` это запуск основной программы(только бинарный файл)
    2) `make generate FILE=input.txt COUNT=количество записей` запуск программы генерации рандомных данных
    3) `make convert FILE1=input1.txt FILE2=input.bin` запуск программы конвертации из текстового в бинарный
    4) `make clean` удалить все исполняющие файлы из папки out

Комментарии:
по-хорошему нужно делать прогу для запуска и с текстовым файлом и наоборот, также конвертации туда и обратно.
но я просто физически не успею это сделать, при этом много кто сдавал ток с бинарным файлом например.
в твоем случае ты можешь использовать текстовый файл с данными, но ты должен переделать его в бинарный при помощи 3) 
у тебя в папке уже есть inputNormal.txt и inputNormal.bin с этими файлами наглядно проще посмотреть, что да как работает

Далее, я прокомментирую работу каждой функции и структур(не очень очевидных):

Структура Table представляет узел таблицы. Она содержит следующие поля:

    id - идентификатор узла
    st - структура Student, содержащая данные о студенте
    prev - указатель на предыдущий узел в таблице

Функция destroyTable освобождает память, занятую таблицей. Она рекурсивно освобождает память для каждого узла таблицы, начиная с переданного узла t.

Функция findPerson ищет студента по фамилии в таблице и возвращает количество найденных студентов с заданной фамилией. Она проходит по таблице, начиная с узла t, и сравнивает фамилию каждого студента с заданной фамилией surname.

Функция createTable создает таблицу студентов из данных, считанных из файла in. Она читает студентов из файла и добавляет их в таблицу. Каждый студент сохраняется в узле таблицы. Функция возвращает указатель на первый узел таблицы.

Функция infoStudent выводит информацию о студенте с заданной фамилией и инициалами из файла in. Она проходит по студентам в файле и сравнивает фамилию и инициалы каждого студ